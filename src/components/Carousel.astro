---
// Carousel.astro
const { id, title } = Astro.props;
---

<div class="carousel-container" 
     x-data="{
        page: 0,
        itemsPerPage: 4,
        totalItems: 0,
        get totalPages() { return Math.ceil(this.totalItems / this.itemsPerPage); },
        init() {
            this.totalItems = this.$refs.track.children.length;
            this.updateItemsPerPage();
            window.addEventListener('resize', () => this.updateItemsPerPage());
        },
        updateItemsPerPage() {
            const width = window.innerWidth;
            if (width < 640) this.itemsPerPage = 1;
            else if (width < 768) this.itemsPerPage = 2;
            else if (width < 1024) this.itemsPerPage = 3;
            else this.itemsPerPage = 4;
            
            if (this.page >= this.totalPages) this.page = Math.max(0, this.totalPages - 1);
        },
        prevPage() { if (this.page > 0) this.page--; },
        nextPage() { if (this.page < this.totalPages - 1) this.page++; },
        goToPage(p) { this.page = p; }
     }">
    
    {title && <h2 class="carousel-title text-2xl font-bold mb-6 text-center">{title}</h2>}
    
    <div class="carousel relative" id={id}>
        <!-- Bouton Précédent -->
        <button 
            class="carousel-button prev absolute top-1/2 -translate-y-1/2 left-0 z-10 bg-white rounded-full w-10 h-10 flex items-center justify-center shadow-md transition-opacity" 
            x-on:click="prevPage()"
            x-bind:class="{ 'opacity-50 cursor-not-allowed': page === 0 }"
            x-bind:disabled="page === 0"
            aria-label="Précédent">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        
        <!-- Conteneur des slides -->
        <div class="carousel-track-container overflow-hidden px-12">
            <ul 
                x-ref="track" 
                class="carousel-track flex transition-transform duration-300" 
                x-bind:style="`transform: translateX(-${page * 100}%)`">
                <slot />
            </ul>
        </div>
        
        <!-- Bouton Suivant -->
        <button 
            class="carousel-button next absolute top-1/2 -translate-y-1/2 right-0 z-10 bg-white rounded-full w-10 h-10 flex items-center justify-center shadow-md transition-opacity" 
            x-on:click="nextPage()"
            x-bind:class="{ 'opacity-50 cursor-not-allowed': page === totalPages - 1 }"
            x-bind:disabled="page === totalPages - 1"
            aria-label="Suivant">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>
        
        <!-- Indicateurs -->
        <div class="carousel-nav flex justify-center mt-4">
            <template x-for="(_, index) in Array.from({ length: totalPages })" :key="index">
                <button 
                    class="carousel-indicator mx-1 w-3 h-3 rounded-full transition-all duration-300"
                    x-bind:class="{ 'bg-pink-500 scale-125': page === index, 'bg-gray-300': page !== index }"
                    x-on:click="goToPage(index)"
                    x-bind:aria-label="`Aller à la page ${index + 1}`">
                </button>
            </template>
        </div>
    </div>
</div>

<style>
  .carousel-track {
    display: flex;
    transition: transform 0.5s ease;
  }
  
  .carousel-track > :global(li) {
    flex: 0 0 100%;
    padding: 0 0.5rem;
    box-sizing: border-box;
  }
  
  @media (min-width: 640px) {
    .carousel-track > :global(li) {
      flex: 0 0 50%;
    }
  }
  
  @media (min-width: 768px) {
    .carousel-track > :global(li) {
      flex: 0 0 33.333333%;
    }
  }
  
  @media (min-width: 1024px) {
    .carousel-track > :global(li) {
      flex: 0 0 25%;
    }
  }
</style>