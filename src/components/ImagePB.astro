---
import { Picture } from "astro:assets";
import { pb } from "../../backend/backend.mjs";

const {
    record,
    field = "imgUrl",
    alt,
    classPicture,
    classImg,
    thumb = "1024x1024",
} = Astro.props;

// Fonction pour obtenir l'URL avec gestion d'erreur
function getImageUrl(record, field, thumb) {
    try {
        if (!record || !record[field]) return null;
        // Assurez-vous que l'instance PocketBase est correctement configurée pour l'environnement
        return pb.files.getURL(record, record[field], { thumb });
    } catch (error) {
        console.error("Erreur lors de la récupération de l'URL de l'image:", error);
        // Retourne une URL de repli ou null
        return null;
    }
}

const imageUrl = getImageUrl(record, field, thumb);
---

{
    imageUrl ? (
        <Picture
            pictureAttributes={{ class: classPicture }}
            class={classImg}
            inferSize={true}
            formats={["avif", "webp"]}
            alt={alt || "Image"}
            src={imageUrl}
        />
    ) : (
        <div class={classPicture || "w-full h-full bg-gray-200"}>
            <div class={classImg || "w-full h-full flex items-center justify-center text-gray-400"}>
                Image non disponible
            </div>
        </div>
    )
}